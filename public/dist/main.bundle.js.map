{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/account/account.component.html","./src/app/account/account.component.scss","./src/app/account/account.component.ts","./src/app/account/account.module.ts","./src/app/account/account.routes.ts","./src/app/account/manageuser/manageuser.component.html","./src/app/account/manageuser/manageuser.component.scss","./src/app/account/manageuser/manageuser.component.ts","./src/app/account/manageuser/manageuser.service.ts","./src/app/analytics/analytics.component.html","./src/app/analytics/analytics.component.scss","./src/app/analytics/analytics.component.ts","./src/app/app.component.html","./src/app/app.component.scss","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/app.route.ts","./src/app/blockexplorer/blockexplorer.component.html","./src/app/blockexplorer/blockexplorer.component.scss","./src/app/blockexplorer/blockexplorer.component.ts","./src/app/deploy/deploy.component.html","./src/app/deploy/deploy.component.scss","./src/app/deploy/deploy.component.ts","./src/app/deploy/deploy.module.ts","./src/app/deploy/deploy.routes.ts","./src/app/deploy/deploycontract/deploycontract.component.html","./src/app/deploy/deploycontract/deploycontract.component.scss","./src/app/deploy/deploycontract/deploycontract.component.ts","./src/app/filter.pipe.ts","./src/app/pipes/object-iterate.pipe.ts","./src/app/scheduling/scheduling.component.html","./src/app/scheduling/scheduling.component.scss","./src/app/scheduling/scheduling.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \"\\n\\n<router-outlet></router-outlet>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/account/account.component.html\n// module id = ./src/app/account/account.component.html\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/account/account.component.scss\n// module id = ./src/app/account/account.component.scss\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-account',\n  templateUrl: './account.component.html',\n  styleUrls: ['./account.component.scss']\n})\nexport class AccountComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/account/account.component.ts","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { AccountComponent } from './account.component';\nimport { ManageuserComponent } from './manageuser/manageuser.component';\nimport {FormsModule} from '@angular/forms';\n\nimport { accountRoute } from './account.routes'\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(accountRoute),\n    FormsModule\n  ],\n  declarations: [AccountComponent, ManageuserComponent]\n})\nexport class AccountModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/account/account.module.ts","import {Routes} from '@angular/router';\r\nimport { AccountComponent } from './account.component';\r\nimport { ManageuserComponent } from './manageuser/manageuser.component';\r\n\r\nexport const accountRoute : Routes = [\r\n     {\r\n        path: '',\r\n        component:AccountComponent,\r\n        children: [\r\n            {\r\n                path: '',\r\n                redirectTo: 'accountmanage',\r\n                pathMatch: 'full'\r\n          },  \r\n          {\r\n            path: 'accountmanage',\r\n            component: ManageuserComponent\r\n          }\r\n        ]  \r\n    }  \r\n]\n\n\n// WEBPACK FOOTER //\n// ./src/app/account/account.routes.ts","module.exports = \"\\r\\n   <div *ngIf=\\\"accCreated\\\" class=\\\"alert alert-success alert-dismissible fade show\\\" role=\\\"alert\\\">\\r\\n    <strong>Account</strong> Created successfully.\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"Close\\\">\\r\\n     <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n  </button>\\r\\n  </div>\\r\\n  <div *ngIf=\\\"accCreateFail\\\" class=\\\"alert alert-danger alert-dismissible fade show\\\" role=\\\"alert\\\">\\r\\n    <strong>Account</strong> {{ error }}.\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"Close\\\">\\r\\n     <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n  </button>\\r\\n  </div>\\r\\n\\r\\n <div *ngIf=\\\"transactionDone\\\" class=\\\"alert alert-success alert-dismissible fade show\\\" role=\\\"alert\\\">\\r\\n    <strong>Transaction</strong> executed successfully.\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"Close\\\">\\r\\n     <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n  </button>\\r\\n  </div>\\r\\n  <div *ngIf=\\\"transactionFail\\\" class=\\\"alert alert-danger alert-dismissible fade show\\\" role=\\\"alert\\\">\\r\\n    <strong>Transaction</strong> {{ error }}.\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"Close\\\">\\r\\n     <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n  </button>\\r\\n  </div>\\r\\n\\r\\n  <div *ngIf=\\\"peerAdded\\\" class=\\\"alert alert-success alert-dismissible fade show\\\" role=\\\"alert\\\">\\r\\n      <strong>Peer</strong> added successfully.\\r\\n      <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"Close\\\">\\r\\n       <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"peerFail\\\" class=\\\"alert alert-danger alert-dismissible fade show\\\" role=\\\"alert\\\">\\r\\n      <strong>Peer</strong> {{ error }}\\r\\n      <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"Close\\\">\\r\\n       <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-backdrop fade in\\\" [style.display]=\\\"showModal ? 'block' : 'none'\\\"></div>\\r\\n      <div class=\\\"modal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" style=\\\"display: block\\\" [style.display]=\\\"showModal ? 'block' : 'none'\\\">\\r\\n        <div class=\\\"modal-dialog\\\">\\r\\n          <div class=\\\"modal-popup\\\">\\r\\n            <div class=\\\"popup-title\\\">\\r\\n              <img src=\\\"assets/img/loader.gif\\\" alt=\\\"\\\" class=\\\"mx-auto d-block\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  <div class=\\\"container\\\">\\r\\n    <div id=\\\"account-wizard\\\" class=\\\"mt-3\\\">\\r\\n      <!-- Add new account -->\\r\\n      <div class=\\\"card mb-2\\\">\\r\\n        <div class=\\\"card-header\\\" id=\\\"header-addnew\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#body-addnew\\\" aria-expanded=\\\"true\\\" aria-controls=\\\"body-addnew\\\">\\r\\n          <h6 class=\\\"mb-0 py-2\\\">\\r\\n            <i class=\\\"icon-plus\\\"></i> Add New Admin</h6>\\r\\n        </div>\\r\\n        <div id=\\\"body-addnew\\\" class=\\\"collapse show\\\" aria-labelledby=\\\"header-addnew\\\" data-parent=\\\"#account-wizard\\\">\\r\\n          <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && addAccount($event)\\\" #f=\\\"ngForm\\\" novalidate>\\r\\n            <div class=\\\"card-body\\\">\\r\\n              <div class=\\\"w-100\\\">\\r\\n                <div class=\\\"form-row\\\">\\r\\n                  <div class=\\\"form-group col-md-4\\\">\\r\\n                    <label for=\\\"accname\\\">Account Name</label>\\r\\n                    <input type=\\\"email\\\"\\r\\n                           id=\\\"accname\\\"\\r\\n                           name=\\\"accname\\\"\\r\\n                           #accname=\\\"ngModel\\\"\\r\\n                           [(ngModel)]=\\\"account.accname\\\"\\r\\n                           required\\r\\n                           class=\\\"form-control\\\">\\r\\n                    <div *ngIf=\\\"f.submitted && !accname.valid\\\" class=\\\"help-block\\\">Account name is required</div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"form-group col-md-4\\\">\\r\\n                    <label for=\\\"accpwd\\\">Password</label>\\r\\n                    <input type=\\\"password\\\"\\r\\n                           id=\\\"accpwd\\\"\\r\\n                           name=\\\"accpwd\\\"\\r\\n                           #accpwd=\\\"ngModel\\\"\\r\\n                           (keyup)=\\\"passwordMatch()\\\"\\r\\n                           [(ngModel)]=\\\"account.accpwd\\\"\\r\\n                           required\\r\\n                           class=\\\"form-control\\\">\\r\\n                    <div *ngIf=\\\"f.submitted && !accpwd.valid\\\" class=\\\"help-block\\\">Password is required</div>\\r\\n                  </div>\\r\\n                  <div class=\\\"form-group col-md-4\\\">\\r\\n                    <label for=\\\"accpwd\\\">Confirm Password</label>\\r\\n                    <input type=\\\"password\\\"\\r\\n                           id=\\\"confirmpwd\\\"\\r\\n                           name=\\\"confirmpwd\\\"\\r\\n                           #confirmpwd=\\\"ngModel\\\"\\r\\n                           (keyup)=\\\"passwordMatch()\\\"\\r\\n                           [(ngModel)]=\\\"account.confirmpwd\\\"\\r\\n                           required\\r\\n                           class=\\\"form-control\\\">\\r\\n                    <div *ngIf=\\\"f.submitted && !confirmpwd.valid\\\" class=\\\"help-block\\\">Confirm Password is required</div>\\r\\n                    <div *ngIf=\\\"!confirmpwd.pristine\\\">\\r\\n                      <div *ngIf=\\\"!passwordMatcher\\\" class=\\\"help-block\\\">\\r\\n                          Passwords did not match\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"card-footer text-right\\\">\\r\\n              <button type=\\\"submit\\\" class=\\\"btn btn-success\\\"> Submit </button>\\r\\n            </div>\\r\\n          </form>\\r\\n        </div>\\r\\n      </div>\\r\\n      <!-- ./Add new account -->\\r\\n\\r\\n      <!-- Manage admin -->\\r\\n      <div class=\\\"card mb-2\\\">\\r\\n        <div class=\\\"card-header collapsed\\\" id=\\\"header-manage\\\"  (click)=\\\"getAccount()\\\"  data-toggle=\\\"collapse\\\" data-target=\\\"#body-manage\\\" aria-expanded=\\\"false\\\" aria-controls=\\\"body-manage\\\">\\r\\n          <h6 class=\\\"mb-0 py-2\\\">\\r\\n            <i class=\\\"icon-users\\\"></i> Manage Admin\\r\\n          </h6>\\r\\n        </div>\\r\\n        <div id=\\\"body-manage\\\" class=\\\"collapse\\\" aria-labelledby=\\\"header-manage\\\" data-parent=\\\"#account-wizard\\\">\\r\\n          <div class=\\\"card-body\\\">\\r\\n            <div class=\\\"table-responsive-md\\\">\\r\\n              <table class=\\\"table\\\">\\r\\n                <thead>\\r\\n                  <tr>\\r\\n                    <th>Account Name</th>\\r\\n                    <th>Address</th>\\r\\n                    <th>Balance</th>\\r\\n                    <th>Lock Account</th>\\r\\n                    <th>Mine</th>\\r\\n                  </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                  <tr *ngFor =\\\"let accountDetail of accountDetails; let i=index\\\">\\r\\n                    <td>{{accountDetail.accountname}}</td>\\r\\n                    <td class=\\\"text-wrap\\\">{{accountDetail.accountId}}</td>\\r\\n                    <td> {{accountDetail.amount }} </td>\\r\\n                    <td>\\r\\n                      <div *ngIf=\\\" i != 0;\\\">\\r\\n                        <label class=\\\"toggle\\\">\\r\\n                          <input type=\\\"checkbox\\\" [checked]=\\\"accountDetail.status == 'inactive'\\\" (click)=\\\"updateAccountStaus( accountDetail.accountId, accountDetail.password, accountDetail.status )\\\">\\r\\n                          <span class=\\\"handle\\\"></span>\\r\\n                        </label>\\r\\n                      </div>\\r\\n                    </td>\\r\\n                    <td>\\r\\n                      <div *ngIf=\\\" i == 0;\\\">\\r\\n                          <div *ngIf=\\\" isMining == false;\\\">\\r\\n                              <button class=\\\"btn btn-success btn-sm btn-rounded\\\" (click)=\\\"updateMineService('start')\\\">\\r\\n                              <i class=\\\"icon-pause\\\"></i>Start</button>\\r\\n                          </div>\\r\\n                          <div *ngIf=\\\" isMining == true;\\\">\\r\\n                              <button class=\\\"btn btn-danger btn-sm btn-rounded\\\" (click)=\\\"updateMineService('stop')\\\">\\r\\n                              <i class=\\\"icon-pause\\\"></i>Stop</button>\\r\\n                          </div>\\r\\n                      </div>\\r\\n                    </td>\\r\\n                  </tr>\\r\\n                </tbody>\\r\\n              </table>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <!-- ./Manage admin -->\\r\\n\\r\\n      <!-- Transaction tokens -->\\r\\n      <div class=\\\"card mb-2\\\">\\r\\n        <div class=\\\"card-header collapsed\\\" id=\\\"header-transaction\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#body-transaction\\\" aria-expanded=\\\"false\\\" aria-controls=\\\"body-transaction\\\">\\r\\n          <h6 class=\\\"mb-0 py-2\\\">\\r\\n            <i class=\\\"icon-tab\\\"></i> Transaction tokens</h6>\\r\\n        </div>\\r\\n        <div id=\\\"body-transaction\\\" class=\\\"collapse\\\" aria-labelledby=\\\"header-transaction\\\" data-parent=\\\"#account-wizard\\\">\\r\\n          <div class=\\\"card-body\\\">\\r\\n            <div class=\\\"w-75\\\">\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-6\\\">\\r\\n                  <label for=\\\"accfrom\\\">From Account</label>\\r\\n                  <select name=\\\"profile\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"accountTransaction.fromAccount\\\">\\r\\n                    <option [ngValue]=\\\"null\\\" disabled>Choose your Account</option>\\r\\n                    <option *ngFor=\\\"let accountA of accountDetails\\\" [ngValue]=\\\"accountA.accountId\\\">\\r\\n                        {{ accountA.accountname }} [ {{ accountA.amount }} ]\\r\\n                    </option>\\r\\n                 </select>\\r\\n\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-md-6\\\">\\r\\n                  <label for=\\\"accto\\\">To Account</label>\\r\\n                  <select name=\\\"profile\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"accountTransaction.toAccount\\\">\\r\\n                    <option [ngValue]=\\\"null\\\" disabled>Choose your Account</option>\\r\\n                    <option *ngFor=\\\"let accountB of accountDetails\\\" [ngValue]=\\\"accountB.accountId\\\">\\r\\n                        {{ accountB.accountname }} [ {{ accountB.amount }} ]\\r\\n                    </option>\\r\\n                 </select>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-6\\\">\\r\\n                  <label for=\\\"accquantity\\\">Quantity</label>\\r\\n                  <input type=\\\"text\\\" id=\\\"accquantity\\\" class=\\\"form-control\\\" name=\\\"amount\\\" [(ngModel)]=\\\"accountTransaction.quantity\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"card-footer text-right\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"transfer()\\\"\\r\\n             data-message=\\\"Transferring\\\">Transfer</button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <!-- ./Transaction tokens -->\\r\\n\\r\\n      <!-- Manage admin -->\\r\\n      <div class=\\\"card mb-2\\\">\\r\\n        <div class=\\\"card-header collapsed\\\" (click) = \\\"getAdminNodeInfo()\\\" id=\\\"header-nodeinfo\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#body-nodeinfo\\\" aria-expanded=\\\"false\\\" aria-controls=\\\"body-manage\\\">\\r\\n          <h6 class=\\\"mb-0 py-2\\\">\\r\\n            <i class=\\\"icon-info\\\"></i> Admin Node Info\\r\\n          </h6>\\r\\n        </div>\\r\\n        <div id=\\\"body-nodeinfo\\\" class=\\\"collapse\\\" aria-labelledby=\\\"header-nodeinfo\\\" data-parent=\\\"#account-wizard\\\">\\r\\n          <div class=\\\"card-body\\\" *ngIf=\\\"nodeInfo != undefined\\\">\\r\\n            <div class=\\\"table-responsive-md\\\">\\r\\n              <table class=\\\"table\\\">\\r\\n                <tbody>\\r\\n                  <tr>\\r\\n                    <td class=\\\"overflow-wrap-hack\\\"><strong>eNode</strong> :\\r\\n                       <span class=\\\"node-info\\\">{{ nodeInfo.enode.replace('[::]', privateIp.privateIp) }}</span></td>\\r\\n                  </tr>\\r\\n                  <tr>\\r\\n                    <td><strong>Genesis</strong> : {{ nodeInfo.protocols.eth.genesis }}</td>\\r\\n                  </tr>\\r\\n                  <tr>\\r\\n                    <td><strong>Head</strong> : {{ nodeInfo.protocols.eth.head }} </td>\\r\\n                  </tr>\\r\\n                  <tr>\\r\\n                    <td><strong>Network</strong> : {{ nodeInfo.protocols.eth.network }} </td>\\r\\n                  </tr>\\r\\n                </tbody>\\r\\n              </table>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <!-- ./Manage admin -->\\r\\n\\r\\n      <!-- Transaction tokens -->\\r\\n      <div class=\\\"card mb-2\\\">\\r\\n          <div class=\\\"card-header collapsed\\\" id=\\\"header-peer\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#body-peer\\\" aria-expanded=\\\"false\\\" aria-controls=\\\"body-transaction\\\">\\r\\n            <h6 class=\\\"mb-0 py-2\\\">\\r\\n              <i class=\\\"icon-plus\\\"></i> Add Peers</h6>\\r\\n          </div>\\r\\n          <div id=\\\"body-peer\\\" class=\\\"collapse\\\" aria-labelledby=\\\"header-peer\\\" data-parent=\\\"#account-wizard\\\">\\r\\n            <div class=\\\"card-body\\\">\\r\\n              <div class=\\\"w-100\\\">\\r\\n                <div class=\\\"form-row\\\">\\r\\n                  <div class=\\\"form-group col-md-8\\\">\\r\\n                    <label for=\\\"enode\\\">eNode</label>\\r\\n                    <input type=\\\"text\\\" id=\\\"enode\\\" [(ngModel)] = \\\"peerInfo.enode\\\" class=\\\"form-control\\\" name=\\\"enode\\\">\\r\\n                  </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"addPeerInfo()\\\" data-message=\\\"Peering\\\">Add as Peer</button>\\r\\n            </div>\\r\\n            <div class=\\\"card-footer text-right\\\">\\r\\n                             </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <!-- ./Transaction tokens -->\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/account/manageuser/manageuser.component.html\n// module id = ./src/app/account/manageuser/manageuser.component.html\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/account/manageuser/manageuser.component.scss\n// module id = ./src/app/account/manageuser/manageuser.component.scss\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { ManageuserService } from './manageuser.service';\nimport { PlatformLocation } from '@angular/common';\n\n@Component({\n    selector: 'app-manageuser',\n    templateUrl: './manageuser.component.html',\n    styleUrls: ['./manageuser.component.scss']\n})\n\nexport class ManageuserComponent implements OnInit {\n  showModal: boolean = false;\n  peerFail: boolean;\n  accCreateFail: boolean;\n  error: any;\n  transactionFail: any;\n  privateIp: any;\n  updateUserAmount: { \"accountname\": any; \"accountId\": any; \"password\": any; \"amount\": any; \"status\": any; };\n    nodeInfo: any;\n    statusInfo: any;\n    parseError: boolean;\n    accCreated: boolean = false;\n    account: any = {};\n    lastTransactionID: any;\n    accountTransaction: any = {};\n    transactionDone: boolean = false;\n    defaultAccounts: any;\n    newAccountInfo: any = {};\n    updatedAccountInfo:any = [];\n    passwordMatcher:boolean = false;\n    accountInfo: any = [];\n    updateAccountDetail: any = [];\n    accountDetails: any;\n    accountDetailss: any;\n    defaultAccount: any = [];\n    defaultAccountnew: any;\n    userAccountInfo: any;\n    peerInfo: any = {};\n    peerAdded: boolean = false;\n    isMining: boolean = false;\n\n    public hostname: string;\n    constructor( private platformLocation: PlatformLocation, private manageuserService: ManageuserService ) {\n      this.hostname = (platformLocation as any).location.host;\n    }\n    /*Add account start*/\n    addAccount() {\n      this.showModal = true;\n      if(this.passwordMatcher == true) {\n          let accountNo = this.manageuserService.addAccountService(this.account);\n          if(accountNo !='') {\n            //this.accCreated = true;\n          }\n          this.error = \"\";\n          this.getUserAccountInfo().subscribe((res: Response) => { \n                try {\n                  this.accountDetailss = JSON.parse(res[0][1]);\n                  this.parseError = false;\n                } catch (ex) {\n                  this.parseError = true;\n                  this.accCreateFail = true;\n                  this.error = ex;\n                  this.hideFlashMessage(\"this.accCreateFail\");\n                }\n                this.storeAccountInformation(this.accountDetailss, accountNo, this.parseError);\n                this.showModal = false;\n                this.accCreated = true;\n          });\n          this.hideFlashMessage(\"this.accCreated\");\n      }\n      this.getAccount();\n    }\n\n    storeAccountInformation(accountDetails, accountNo, parseError) {\n      \n        this.updatedAccountInfo = [];\n        this.manageuserService.updateAccountInfo(accountNo, this.account.accpwd, \"active\");\n        this.newAccountInfo = {\n            \"accountname\": this.account.accname,\n            \"accountId\": accountNo,\n            \"amount\": this.getUserBalance(accountNo),\n            \"password\": this.account.accpwd,\n            \"status\": \"active\"\n        };\n        if(this.parseError === false) {\n          if(accountDetails.length > 0 ) {\n              for (let i = 0; i < accountDetails.length; i++) {\n                this.updatedAccountInfo.push(accountDetails[i]);  \n              }\n          } else {\n            this.updatedAccountInfo.push(this.manageuserService.getDefaultAccount());\n          }\n        } else {\n            this.updatedAccountInfo.push(this.manageuserService.getDefaultAccount());\n        }\n        this.updatedAccountInfo.push(this.newAccountInfo);\n        this.accountInfo = {\n          \"itemkey\": this.hostname,\n          \"itemvalue\": JSON.stringify(this.updatedAccountInfo),\n          \"itemstatus\": \"Inactive\"\n        };\n        \n        this.manageuserService.saveAccountDetails(this.accountInfo).subscribe(data =>{\n          this.getAccount();\n        });\n        this.account.accname = ' ';\n        this.account.accpwd = '';\n        this.account.confirmpwd = ' ';\n    }\n\n    passwordMatch() {\n      if(this.account.accpwd == this.account.confirmpwd) {\n        this.passwordMatcher = true;\n      } else {\n        this.passwordMatcher = false;\n      }\n    }\n\n    cbAccountCreation(err, res) {\n      if (!err) {\n        this.lastTransactionID = res;\n        console.log('res',res);\n      } else {\n        this.lastTransactionID = \"Error\";\n      }\n      console.log('trans id', this.lastTransactionID);\n    }\n\n    /*get All account details start */\n    getAccount() {\n      this.getUserAccountInfo().subscribe(\n        (response: Response) => {\n            try {\n              this.accountDetails = JSON.parse(response[0][1]);\n              this.parseError = false;\n            } catch (ex) {\n              this.parseError = true;\n            }\n            if ((this.parseError == false && this.accountDetails.length == 0 ) || this.parseError == true) {\n              this.defaultAccount = [];\n              this.defaultAccount.push(this.manageuserService.getDefaultAccount());\n              this.accountInfo = {\n                \"itemkey\": this.hostname,\n                \"itemvalue\": JSON.stringify(this.defaultAccount),\n                \"itemstatus\": \"active\"\n              };\n              this.manageuserService.saveAccountDetails(this.accountInfo).subscribe(data =>{\n              });\n            }\n            this.isMining = this.manageuserService.getMiningStatus();\n        });\n    }\n    // get transfer\n    public transfer() {\n      this.showModal = true;\n      let fromAcc = this.accountTransaction.deployFrom;\n      let toAcc   = this.accountTransaction.deployTo;\n      let amount   = this.accountTransaction.amount;\n      try {\n      let transRes:any =  this.manageuserService.transferService(this.accountTransaction);\n        if (transRes !='') {\n          this.transactionDone = true;\n          this.updateAccountInfo(null, this.accountTransaction.toAccount)\n          this.getAccount();\n          this.transactionFail = false;\n        }\n        this.hideFlashMessage(\"this.transactionDone\");\n        this.showModal = false;\n      } catch(e) {\n        this.transactionFail = true;\n        this.error = e;\n        this.hideFlashMessage(\"this.transactionFail\");\n        //this.showModal = false;\n      }\n    }\n\n    getUserBalance(accountId) {\n      return this.manageuserService.getUserBalance(accountId);\n    }\n\n    getUserAccountInfo() {\n      return this.manageuserService.getAccountDetails();\n    }\n\n    updateAccountStaus(accountId, password, status) {\n      // tslint:disable-next-line:triple-equals\n      if (status == 'active') {\n        status = 'inactive';\n      } else {\n        status = 'active';\n      }\n      const accountStatus = this.manageuserService.updateAccountInfo(accountId, password, status);\n      if (accountStatus === true) {\n        this.updateAccountInfo(status, accountId);\n      }\n      this.getAccount();\n    }\n\n    updateMineService(status) {\n      const mineState = this.manageuserService.updateMineService(status);\n      this.getAccount();\n    }\n\n    updateAccountInfo(status = null, accountId) {\n      if(status != null) {\n        this.statusInfo = status;\n      }\n      this.getUserAccountInfo().subscribe( (response: Response) => { \n        let accountUpdatedInfo: any;\n              try {\n                accountUpdatedInfo = JSON.parse(response[0][1]);\n                this.parseError = false;\n              } catch (ex) {\n                accountUpdatedInfo = [];\n                this.parseError = true;\n              }\n              this.updatedAccountInfo = [];\n              if ( accountUpdatedInfo.length > 0 ) {\n                for (let i = 0; i < accountUpdatedInfo.length; i++) {\n                  if(accountUpdatedInfo[i].accountId == accountId) {\n                    this.newAccountInfo = {\n                          \"accountname\": accountUpdatedInfo[i].accountname,\n                          \"accountId\": accountUpdatedInfo[i].accountId,\n                          \"password\": accountUpdatedInfo[i].password,\n                          \"amount\": this.getUserBalance(accountUpdatedInfo[i].accountId),\n                          \"status\": this.statusInfo\n                      };\n                      this.updatedAccountInfo.push(this.newAccountInfo);\n                  } else {\n                      this.updatedAccountInfo.push(accountUpdatedInfo[i]);\n                  }\n                }\n              }\n              this.updateAccountDetail = {\n                \"itemkey\": this.hostname,\n                \"itemvalue\": JSON.stringify(this.updatedAccountInfo),\n                \"itemstatus\": \"active\"\n              };\n              this.manageuserService.saveAccountDetails(this.updateAccountDetail).subscribe(data =>{\n              });\n          });\n          this.getAccount();\n    }\n\n    getAdminNodeInfo() {\n      this.manageuserService.getURL().subscribe(response => {\n          this.nodeInfo = this.manageuserService.getAdminNodeInfo();\n          this.privateIp = response;\n      });\n    }\n\n    addPeerInfo() {\n      this.error = \"\";\n      try {\n        this.peerAdded =  this.manageuserService.addPeerInfo(this.peerInfo.enode);\n        this.peerFail = false;\n      } catch (e) {\n        this.peerFail = true;\n        this.error = e;\n        this.hideFlashMessage(\"this.peerFail\");\n      }\n      this.hideFlashMessage(\"this.peerAdded\");\n    }\n\n    getMiningStatus() {\n      this.isMining = this.manageuserService.getMiningStatus();\n      console.log(\"this.isMining\", this.isMining);\n    }\n\n    updateUserBalanace() {\n      this.getUserAccountInfo().subscribe( (response: Response) => { \n        let accountUpdatedInfo: any;\n              try {\n                accountUpdatedInfo = JSON.parse(response[0][1]);\n                this.parseError = false;\n              } catch (ex) {\n                accountUpdatedInfo = [];\n                this.parseError = true;\n              }\n              this.updatedAccountInfo = [];\n              if ( accountUpdatedInfo.length > 0 ) {\n                for (let i = 0; i < accountUpdatedInfo.length; i++) {\n                    this.updateUserAmount = {\n                          \"accountname\": accountUpdatedInfo[i].accountname,\n                          \"accountId\": accountUpdatedInfo[i].accountId,\n                          \"password\": accountUpdatedInfo[i].password,\n                          \"amount\": this.getUserBalance(accountUpdatedInfo[i].accountId),\n                          \"status\": accountUpdatedInfo[i].status,\n                      };\n                      this.updatedAccountInfo.push(this.updateUserAmount);\n                }\n              }\n              this.updateAccountDetail = {\n                \"itemkey\": this.hostname,\n                \"itemvalue\": JSON.stringify(this.updatedAccountInfo),\n                \"itemstatus\": \"active\"\n              };\n              this.manageuserService.saveAccountDetails(this.updateAccountDetail).subscribe(data =>{\n              });\n          });\n          //this.getAccount();\n    }\n\n    // listenEvents() {\n    //   this.manageuserService.mining.subscribe(data => {\n    //       console.log(\"Welcome data\", data);\n    //   });\n    // }\n    hideFlashMessage(data) {\n      setTimeout(function() {\n        if(data == \"this.accCreated\") {\n          this.accCreated = false;\n        } else if(data == \"this.transactionDone\") {\n          this.transactionDone = false;\n        } else if(data == \"this.peerAdded\") {\n          this.peerAdded = false;\n        } else if(data == \"this.transactionFail\") {\n          this.transactionFail = false;\n        } else if(data == \"this.accCreateFail\") {\n          this.accCreateFail = false;\n        } else if(data == \"this.peerFail\") {\n          this.peerFail = false;\n        }\n\n      }.bind(this), 5000);\n    }\n\n    ngOnInit() {\n        this.updateUserBalanace();\n        this.getAccount();\n        //this.listenEvents();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/account/manageuser/manageuser.component.ts","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams,  } from '@angular/common/http';\r\nimport * as  fs from 'ngx-fs';\r\nimport * as solc from 'solc';\r\nimport * as Web3 from 'web3';\r\nimport { PlatformLocation } from '@angular/common';\r\nimport { Conditional } from '@angular/compiler';\r\nimport { EventEmitter } from '@angular/core';\r\nimport 'rxjs/add/operator/map';\r\n//import * as miner from '../../../../node_modules/web3/lib/web3/methods/';\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n};\r\n\r\n@Injectable()\r\nexport class ManageuserService {\r\n  allAccounts: Object;\r\n  web3: any;\r\n  CounterContract: any;\r\n  contractInstance: any;\r\n  count: number;\r\n  blockNumber: any;\r\n  blockNum:any;\r\n  blocks : any = [];\r\n  nodebaseUrl:any;\r\n  blockchain:any;\r\n  bUrl:any;\r\n  blockurlArray:any = [];\r\n  accountDetails: any = {};\r\n  contractInfo = [];\r\n  contractInfoEmitter = new EventEmitter<any>();\r\n  hostname: any;\r\n  miningStatus = new EventEmitter<any>();\r\n  mining = new EventEmitter<any>();\r\n\r\n  constructor(private http: HttpClient, private platformLocation: PlatformLocation) {\r\n    this.nodebaseUrl = (platformLocation as any).location.origin;\r\n    this.hostname = (platformLocation as any).location.host;\r\n    if (this.nodebaseUrl.indexOf('http://localhost') == 0) {\r\n      this.nodebaseUrl = 'http://localhost:5000';\r\n    }\r\n    // this.http.get(this.nodebaseUrl + '/blockchainurl').subscribe((res) => {\r\n    //     this.blockchain =  res;\r\n    //     console.log(\"BCNURL\", this.blockchain);\r\n    //     //this.web3 = new Web3(new Web3.providers.HttpProvider(this.blockchain));\r\n    // });\r\n\r\n    // this.http.get(this.nodebaseUrl + '/blockchainurl').subscribe((res)=>{\r\n    //   this.blockchain =  res;\r\n    //   this.blockurlArray.push(this.blockchain);\r\n    // });\r\n    this.getURL().subscribe((res)=>{\r\n      this.blockchain =  res;\r\n      this.web3 = new Web3(new Web3.providers.HttpProvider(this.blockchain.blockchainurl));\r\n      this.web3._extend({\r\n        property: 'admin',\r\n        methods: [new this.web3._extend.Method({\r\n          name: 'addPeer',\r\n          call: 'admin_addPeer',\r\n          params: 1,\r\n        })],\r\n        properties: [new this.web3._extend.Property({\r\n              name: 'nodeInfo',\r\n              getter: 'admin_nodeInfo'\r\n        })]\r\n      });\r\n      this.web3._extend({\r\n        property: 'miner',\r\n        methods: [new this.web3._extend.Method({\r\n          name: 'mineStart',\r\n          call: 'miner_start',\r\n          params: 1,\r\n        })],\r\n        properties: [new this.web3._extend.Property({\r\n              name: 'mineStop',\r\n              getter: 'miner_stop'\r\n        })]\r\n      });\r\n    });\r\n  }\r\n\r\n  getURL(){\r\n    return  this.http.get(this.nodebaseUrl + '/bcurl');\r\n  }\r\n  /*-------------Add Account Service -------------------------*/\r\n\r\n  /*Add Account Service */\r\n  addAccountService(account) {\r\n    this.accountDetails = account;\r\n    console.log(this.accountDetails);\r\n    console.log(\"Admin\", this.web3.admin);\r\n    return this.web3.personal.newAccount(account.accpwd);\r\n  }\r\n\r\n\r\n  saveAccountDetails(accountInfo) {\r\n    console.log(\"accountInf sd o\", accountInfo);\r\n    return this.http.post(this.nodebaseUrl + '/create/account', accountInfo, httpOptions);\r\n  }\r\n\r\n  getAccountInfo() {\r\n\r\n    const allAccountObj = [];\r\n    const accountsdetails = this.web3.personal.listAccounts;\r\n    //for (let i = 0; i < accountsdetails.length; i++) {\r\n      let account = {\r\n        'accountname': 'Default Account',\r\n        'accountId': accountsdetails[0],\r\n        'amount': this.getUserBalance(accountsdetails[0]),\r\n      }\r\n      allAccountObj.push(account);\r\n    //}\r\n    return allAccountObj;\r\n  }\r\n\r\n  getDefaultAccount() {\r\n    const allAccountObj = [];\r\n    const accountsdetails = this.web3.personal.listAccounts;\r\n    const account = {\r\n        'accountname': 'Default Account',\r\n        'accountId': accountsdetails[0],\r\n        'amount': this.getUserBalance(accountsdetails[0]),\r\n        'status': 'active'\r\n    };\r\n    //llAccountObj.push(account);\r\n    return account;\r\n  }\r\n\r\n  getAccountDetails() {\r\n    let params = new HttpParams();\r\n    params = params.append('host', this.hostname);\r\n    console.log(\"NODe\", this.nodebaseUrl + '/accounts');\r\n    return this.http.get(this.nodebaseUrl + '/accounts', {params: params});\r\n  }\r\n\r\n  isUnlocked (address) {\r\n     try {\r\n         this.web3.eth.sign(\"\", address);\r\n     } catch (e) {\r\n         return false;\r\n     }\r\n     return true;\r\n  }\r\n\r\n  transferService(accountTransaction){\r\n    console.log(\"accountTransaction\", accountTransaction);\r\n      var fromAccount = accountTransaction.fromAccount;\r\n      var toAccount = accountTransaction.toAccount;\r\n      var amount = accountTransaction.quantity;\r\n\r\n      let message = {from: fromAccount, to:toAccount, value: this.web3.toWei(amount, 'ether')};\r\n      return  this.web3.eth.sendTransaction(message);\r\n\r\n  }\r\n\r\n/*----------------------------Block Explorer Service ------------------------------*/\r\n\r\n   //get All block number\r\n   getBlockNumberService(){\r\n    let maxBlocks = 50; // TODO: into setting file or user select\r\n    let blocknumberNew = this.web3.eth.blockNumber;\r\n    var blockNum = this.blockNum = parseInt(blocknumberNew, 10);\r\n    console.log(this.web3.eth.blockNumber);\r\n    if (maxBlocks > blockNum) {\r\n        maxBlocks = blockNum + 1;\r\n    }\r\n\r\n    // get latest 10 blocks\r\n    this.blocks = [];\r\n    for (var i = 0; i < maxBlocks; ++i) {\r\n       this.blocks.push(this.web3.eth.getBlock(blockNum - i));\r\n    }\r\n    return this.blocks;\r\n   }\r\n\r\n  //get block details\r\n   getBlockInfoService(blocknumber){\r\n      return this.web3.eth.getBlock(blocknumber);\r\n   }\r\n\r\n\r\n\r\n   //from block explorer mining service\r\n\r\n  mineService(miner){\r\n    let mineRes:any = [];\r\n        this.web3.eth.getBalance(miner,function(error, result) {\r\n        let mineVal = {\r\n                'e' : result.e,\r\n                's' :result.s\r\n           }\r\n          mineRes.push(mineVal);\r\n       });\r\n       return mineRes;\r\n  }\r\n\r\n  /*--------------------Smart contracts Service ------------------------ */\r\n  compileContractService(solfile){\r\n\r\n      let body = {\r\n        \"source\": solfile\r\n       }\r\n      return this.http.post(this.nodebaseUrl + '/solstring',body,httpOptions);\r\n\r\n\r\n  }\r\n  //mine start and stop service\r\n  updateMineService(service){\r\n    if(service == 'start') {\r\n        return this.web3.miner.mineStart(1);\r\n    } else if (service == 'stop') {\r\n        return this.web3.miner.mineStop;\r\n    }\r\n  }\r\n\r\n  //deploy contract\r\n  deployContractService(deploy,compileResults){\r\n    this.contractInfo = [];\r\n    let contractName = deploy.deployFrom;\r\n    let newContract = compileResults.contracts[contractName],\r\n    abi = JSON.parse(newContract.interface),\r\n    bytecode = '0x' + newContract.bytecode,\r\n    myContract =  this.web3.eth.contract(abi);\r\n\r\n    let gasEstimate = this.web3.eth.estimateGas({data: bytecode});\r\n    let MyContract = this.web3.eth.contract(abi);\r\n    let myContractReturned = MyContract.new({\r\n    from:deploy.deployTo,\r\n    data:bytecode,\r\n    gas:gasEstimate},(error,newContract) => {\r\n\r\n     if(!error) {\r\n          let byteAbi = newContract;\r\n          this.contractInfo.push(byteAbi);\r\n          this.contractInfoEmitter.emit(this.contractInfo);\r\n      }\r\n    })\r\n    return this.contractInfo;\r\n}\r\n\r\n  getTransactionInfo(transactionHash) {\r\n    return this.web3.eth.getTransaction(transactionHash);\r\n  }\r\n\r\n  getGasPrice(Bignumber) {\r\n    console.log(Bignumber);\r\n    return this.web3.fromWei(Bignumber, \"ether\").toNumber();\r\n  }\r\n\r\n  getUserBalance(accountId) {\r\n    return this.web3.fromWei(this.web3.eth.getBalance(accountId), \"ether\").toNumber();\r\n  }\r\n\r\n  updateAccountInfo(accountId, password, status) {\r\n    console.log(\"status service\", status);\r\n    if(status === 'active') {\r\n      console.log(\"unlock\");\r\n      return this.web3.personal.unlockAccount(accountId, password);\r\n    } else {\r\n      console.log(\"lock\");\r\n      return this.web3.personal.lockAccount(accountId);\r\n    }\r\n  }\r\n\r\n  getAdminNodeInfo() {\r\n    console.log(\"enode Info\", this.web3.admin.nodeInfo);\r\n    return this.web3.admin.nodeInfo;\r\n  }\r\n\r\n  addPeerInfo(enode) {\r\n    console.log(enode);\r\n    return this.web3.admin.addPeer(enode);\r\n  }\r\n\r\n  getMiningStatus() {\r\n    return this.web3.eth.mining;\r\n  }\r\n\r\n  getTotalBlocks() {\r\n    return this.web3.eth.blockNumber;\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/account/manageuser/manageuser.service.ts","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"mt-3\\\">\\n    <img src=\\\"assets/img/analytics.png\\\" alt=\\\"\\\" class=\\\"d-block mx-auto\\\">\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/analytics/analytics.component.html\n// module id = ./src/app/analytics/analytics.component.html\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/analytics/analytics.component.scss\n// module id = ./src/app/analytics/analytics.component.scss\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-analytics',\n  templateUrl: './analytics.component.html',\n  styleUrls: ['./analytics.component.scss']\n})\nexport class AnalyticsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/analytics/analytics.component.ts","module.exports = \"<header>\\r\\n\\r\\n  <nav class=\\\"navbar navbar-expand-lg navbar-dark bg-dark py-2 py-lg-0\\\" role=\\\"navigation\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n      <a class=\\\"navbar-brand\\\" href=\\\"#\\\">\\r\\n        <img src=\\\"./assets/img/logo.png\\\" alt=\\\"\\\" class=\\\"float-left\\\"> &nbsp; Private Blockchain Admin</a>\\r\\n      <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbar-collapse\\\" aria-controls=\\\"navbarSupportedContent\\\"\\r\\n        aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n        <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n      </button>\\r\\n      <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbar-collapse\\\">\\r\\n        <ul class=\\\"navbar-nav mt-2 mx-lg-4 my-lg-0\\\">\\r\\n          <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['active']\\\">\\r\\n            <a class=\\\"nav-link p-2 p-lg-3\\\" routerLink=\\\"accountmanage\\\">\\r\\n              Network Administration\\r\\n            </a>\\r\\n          </li>\\r\\n          <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['active']\\\">\\r\\n            <a class=\\\"nav-link p-2 p-lg-3\\\" routerLink=\\\"deploy\\\">\\r\\n              Smart Contracts\\r\\n            </a>\\r\\n          </li>\\r\\n          <li class=\\\"nav-item hide\\\" [routerLinkActive]=\\\"['active']\\\">\\r\\n            <a class=\\\"nav-link p-2 p-lg-3\\\" routerLink=\\\"analytics\\\">\\r\\n              Analytics\\r\\n            </a>\\r\\n          </li>\\r\\n          <li class=\\\"nav-item hide\\\" [routerLinkActive]=\\\"['active']\\\">\\r\\n            <a class=\\\"nav-link p-2 p-lg-3\\\" routerLink=\\\"scheduling\\\">\\r\\n              Scheduling\\r\\n            </a>\\r\\n          </li>\\r\\n          <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['active']\\\">\\r\\n            <a class=\\\"nav-link p-2 p-lg-3\\\" routerLink=\\\"blockexplorer\\\">\\r\\n              Block Explorer\\r\\n            </a>\\r\\n          </li>\\r\\n\\r\\n        </ul>\\r\\n\\r\\n      </div>\\r\\n      <div>\\r\\n        <button class=\\\"btn btn-info btn-sm\\\" type=\\\"submit\\\">\\r\\n          <a class=\\\"nav-link\\\" href=\\\"{{ loanAppUrl }}\\\" target=\\\"_blank\\\">\\r\\n           <span> <b style=\\\"font-size: 14px; font-weight: 500; color: #FFFFFF\\\">Deploy Loan DApp</b></span>\\r\\n          </a>\\r\\n        </button>\\r\\n      </div>\\r\\n      <!-- /.navbar-collapse -->\\r\\n    </div>\\r\\n    <!-- /.container-fluid -->\\r\\n  </nav>\\r\\n</header>\\r\\n<section>\\r\\n  <router-outlet></router-outlet>\\r\\n</section>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.scss\n// module id = ./src/app/app.component.scss\n// module chunks = main","import { Component } from '@angular/core';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams, HttpResponse  } from '@angular/common/http';\r\nimport { PlatformLocation } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  loanAppUrl: any;\r\n  nodebaseUrl: any;\r\n  title = 'app';\r\n\r\n  constructor(private http: HttpClient, private platformLocation: PlatformLocation) {\r\n    this.nodebaseUrl = (platformLocation as any).location.origin;\r\n    if (this.nodebaseUrl.indexOf('http://localhost') == 0) {\r\n      this.nodebaseUrl = 'http://localhost:5000';\r\n    }\r\n    this.http.get(this.nodebaseUrl + '/loanappurl').subscribe(\r\n      (response: Response) => {\r\n          this.loanAppUrl = response.url;\r\n      });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule} from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport { Approute } from './app.route';\nimport { HttpClientModule } from '@angular/common/http';\nimport * as Web3 from 'web3';\n\nimport { AppComponent } from './app.component';\n\nimport { AccountModule }  from './account/account.module';\nimport { DeployModule } from  './deploy/deploy.module';\n\nimport { ManageuserService } from './account/manageuser/manageuser.service';\nimport { BlockexplorerComponent } from './blockexplorer/blockexplorer.component';\nimport { AnalyticsComponent } from './analytics/analytics.component';\nimport { SchedulingComponent } from './scheduling/scheduling.component';\nimport { ObjectIteratePipe } from './pipes/object-iterate.pipe';\nimport { FilterPipe } from './filter.pipe';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    BlockexplorerComponent,\n    AnalyticsComponent,\n    SchedulingComponent,\n    ObjectIteratePipe,\n    FilterPipe,\n  ],\n  imports: [\n    BrowserModule,\n    RouterModule.forRoot(Approute),\n    AccountModule,\n    DeployModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [ManageuserService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","\r\nimport {Routes} from '@angular/router';\r\nimport { AccountComponent } from './account/account.component';\r\nimport { DeployComponent } from './deploy/deploy.component';\r\nimport { BlockexplorerComponent } from './blockexplorer/blockexplorer.component';\r\nimport { AnalyticsComponent } from './analytics/analytics.component';\r\nimport { SchedulingComponent } from './scheduling/scheduling.component';\r\n\r\n\r\nexport const Approute: Routes = [\r\n     {\r\n         path : '',\r\n         component : AccountComponent\r\n     },\r\n     {\r\n        path : 'account',\r\n        component : AccountComponent\r\n    },\r\n     {\r\n         path : 'deploy',\r\n         component:DeployComponent\r\n     },\r\n     {\r\n         path:'blockexplorer',\r\n         component:BlockexplorerComponent\r\n     },\r\n     {\r\n         path:'analytics',\r\n         component:AnalyticsComponent\r\n     },\r\n     {\r\n         path:'scheduling',\r\n         component:SchedulingComponent\r\n     }\r\n  ];\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.route.ts","module.exports = \"<!-- <div class=\\\"alert alert-success alert-dismissible fade show\\\" role=\\\"alert\\\">\\r\\n  <strong>Compilation</strong> done successfully.\\r\\n  <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"Close\\\">\\r\\n  <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n</button>\\r\\n</div> -->\\r\\n<div class=\\\"modal-backdrop fade in\\\" [style.display]=\\\"showModal ? 'block' : 'none'\\\"></div>\\r\\n  <div class=\\\"modal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" style=\\\"display: block\\\" [style.display]=\\\"showModal ? 'block' : 'none'\\\">\\r\\n    <div class=\\\"modal-dialog\\\">\\r\\n      <div class=\\\"modal-popup\\\">\\r\\n        <div class=\\\"popup-title\\\">\\r\\n          <img src=\\\"assets/img/loader.gif\\\" alt=\\\"\\\" class=\\\"mx-auto d-block\\\">\\r\\n        </div>\\r\\n      </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n<div class=\\\"modal fade\\\" id=\\\"loader\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"loader\\\" aria-hidden=\\\"true\\\">\\r\\n  <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <h5 class=\\\"text-center\\\"></h5>\\r\\n        <img src=\\\"assets/img/loader.gif\\\" alt=\\\"\\\" class=\\\"mx-auto d-block\\\">\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<div class=\\\"container mt-5\\\">\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-lg-4\\\">\\r\\n      <!-- Block list -->\\r\\n      <div class=\\\"card mb-2\\\">\\r\\n        <div class=\\\"card-header\\\" id=\\\"header-blocklist\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#body-blocklist\\\" aria-expanded=\\\"true\\\" aria-controls=\\\"body-blocklist\\\">\\r\\n          <h6 class=\\\"mb-0 py-2\\\">\\r\\n            <i class=\\\"icon-stack\\\"></i> Block List</h6>\\r\\n        </div>\\r\\n        <div id=\\\"body-blocklist\\\" class=\\\"collapse show\\\" aria-labelledby=\\\"header-blocklist\\\" data-parent=\\\"#block-wizard\\\">\\r\\n          <div class=\\\"card-body\\\">\\r\\n            <div class=\\\"custom-input-group mb-3\\\">\\r\\n              <i class=\\\"icon-search\\\" id=\\\"icon-search\\\"></i>\\r\\n              <input class=\\\"form-control is-rounded\\\" type=\\\"search\\\"\\r\\n              placeholder=\\\"Search\\\" aria-label=\\\"Search\\\" aria-describedby=\\\"icon-search\\\">\\r\\n            </div>\\r\\n            <div class=\\\"custom-input-group mb-3\\\">\\r\\n                <input type=\\\"checkbox\\\" (click)=\\\"getBlockInfoWithTransaction(isTransaction)\\\" /> Show blocks with transactions only\\r\\n            </div>\\r\\n            <div *ngIf=\\\"isTransaction;then transactionBlock else allBlocks\\\">here is ignored</div>\\r\\n            <ul class=\\\"list-unstyled\\\">\\r\\n            <ng-template #transactionBlock>\\r\\n                <span *ngFor=\\\"let getBlockNumberList of getBlockNumberLists | filter : searchText\\\">\\r\\n                <li class=\\\"media my-3\\\" *ngIf=\\\"getBlockNumberList.transactions.length\\\" (click)=\\\"getBlockinfo(getBlockNumberList.number)\\\" style=\\\"cursor: pointer;\\\">\\r\\n                        <img class=\\\"img-fluid mr-3\\\" src=\\\"assets/img/stack.png\\\" alt=\\\"Block\\\" style=\\\"width: 50px;\\\">\\r\\n                        <div class=\\\"media-body\\\">\\r\\n                          <h5 class=\\\"mt-0 mb-1\\\">Block # <strong>{{getBlockNumberList.number}}</strong></h5>\\r\\n                          <div class=\\\"d-flex justify-content-md-between\\\">\\r\\n                            <small class=\\\"mr-2\\\">TX#: {{getBlockNumberList.transactions.length}}</small>\\r\\n                            <small class=\\\"mr-2\\\">Size: {{getBlockNumberList.size}}</small>\\r\\n                            <small>Timestamp: {{getBlockNumberList.timestamp}}</small>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                  </li>\\r\\n                </span>\\r\\n            </ng-template>\\r\\n            <ng-template #allBlocks>\\r\\n                <li class=\\\"media my-3\\\" *ngFor=\\\"let getBlockNumberList of getBlockNumberLists | filter : searchText\\\"  (click)=\\\"getBlockinfo(getBlockNumberList.number)\\\" style=\\\"cursor: pointer;\\\">\\r\\n                        <img class=\\\"img-fluid mr-3\\\" src=\\\"assets/img/stack.png\\\" alt=\\\"Block\\\" style=\\\"width: 50px;\\\">\\r\\n                        <div class=\\\"media-body\\\">\\r\\n                          <h5 class=\\\"mt-0 mb-1\\\">Block # <strong>{{getBlockNumberList.number}}</strong></h5>\\r\\n                          <div class=\\\"d-flex justify-content-md-between\\\">\\r\\n                            <small class=\\\"mr-2\\\">TX#: {{getBlockNumberList.transactions.length}}</small>\\r\\n                            <small class=\\\"mr-2\\\">Size: {{getBlockNumberList.size}}</small>\\r\\n                            <small>Timestamp: {{getBlockNumberList.timestamp}}</small>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                  </li>\\r\\n            </ng-template>\\r\\n            </ul>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <!-- ./Block list -->\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-lg-8\\\">\\r\\n      <!-- Block Description -->\\r\\n      <div class=\\\"card mb-2\\\">\\r\\n        <div class=\\\"card-header\\\" id=\\\"header-blockdetails\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#body-blockdetails\\\" aria-expanded=\\\"true\\\" aria-controls=\\\"body-blockdetails\\\">\\r\\n          <h6 class=\\\"mb-0 py-2\\\">\\r\\n            <i class=\\\"icon-info\\\"></i> View Information about an Etherium block</h6>\\r\\n        </div>\\r\\n        <div id=\\\"body-blockdetails\\\" class=\\\"collapse show\\\" aria-labelledby=\\\"header-blockdetails\\\">\\r\\n          <div class=\\\"card-body\\\">\\r\\n            <h4 class=\\\"mb-2\\\">Block# <strong>  {{getBlockinfoDetails.number}} </strong></h4>\\r\\n            <span class=\\\"block-hash\\\">{{getBlockinfoDetails.hash}}</span>\\r\\n            <div class=\\\"d-flex justify-content-end my-2\\\">\\r\\n              <button class=\\\"btn btn-primary mr-3\\\">{{ getBlockinfoDetails.conf }}</button>\\r\\n              <button class=\\\"btn btn-success\\\"> {{ getBlockinfoDetails.gasUsed }} Gas Used</button>\\r\\n            </div>\\r\\n\\r\\n            <h5 class=\\\"text-uppercase font-weight-bold mt-4\\\">Summary</h5>\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-lg-8\\\">\\r\\n                <div class=\\\"d-flex\\\">\\r\\n                  <label class=\\\"col w-50 text-right\\\">Block Number</label>\\r\\n                  <span class=\\\"col w-50 font-weight-bold\\\">{{getBlockinfoDetails.number}}</span>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"d-flex\\\">\\r\\n                  <label class=\\\"col w-50 text-right\\\">Received Time</label>\\r\\n                  <span class=\\\"col w-50 font-weight-bold\\\">{{getBlockinfoDetails.timestamp}}</span>\\r\\n                </div>\\r\\n                <div class=\\\"d-flex\\\">\\r\\n                  <label class=\\\"col w-50 text-right\\\">Difficulty</label>\\r\\n                  <span class=\\\"col w-50 font-weight-bold\\\">{{getBlockinfoDetails.difficulty}}</span>\\r\\n                </div>\\r\\n                <div class=\\\"d-flex\\\">\\r\\n                  <label class=\\\"col w-50 text-right\\\">Nonce</label>\\r\\n                  <span class=\\\"col w-50 font-weight-bold\\\">{{getBlockinfoDetails.nonce}}</span>\\r\\n                </div>\\r\\n                <div class=\\\"d-flex\\\">\\r\\n                  <label class=\\\"col w-50 text-right\\\">Size</label>\\r\\n                  <span class=\\\"col w-50 font-weight-bold\\\">{{getBlockinfoDetails.size}}</span>\\r\\n                </div>\\r\\n                <div class=\\\"d-flex\\\">\\r\\n                  <label class=\\\"col w-50 text-right\\\">Miner</label>\\r\\n                  <span class=\\\"col w-50  miner-anchor\\\"\\r\\n                    (click)=\\\"miner(getBlockinfoDetails.miner)\\\">\\r\\n                       {{getBlockinfoDetails.miner}}\\r\\n                  </span>\\r\\n                </div>\\r\\n                <div *ngIf = \\\"mineShow\\\">\\r\\n                  <div *ngFor = 'let minerRe of minerRes'>\\r\\n                     <div class=\\\"d-flex\\\">\\r\\n                        <label class=\\\"col w-50 text-right\\\">Balance (Wei)</label>\\r\\n                        <span class=\\\"col w-50 font-weight-bold\\\">{{minerRe.s}}</span>\\r\\n                      </div>\\r\\n                      <div class=\\\"d-flex\\\">\\r\\n                          <label class=\\\"col w-50 text-right\\\">Balance (Ether)</label>\\r\\n                          <span class=\\\"col w-50 font-weight-bold\\\">{{minerRe.e}}</span>\\r\\n                      </div>\\r\\n                     </div>\\r\\n                  </div>\\r\\n                <div class=\\\"d-flex\\\">\\r\\n                  <label class=\\\"col w-50 text-right\\\">Gas Limit</label>\\r\\n                  <span class=\\\"col w-50 font-weight-bold\\\">{{getBlockinfoDetails.gasLimit}}</span>\\r\\n                </div>\\r\\n\\r\\n              </div>\\r\\n            </div>\\r\\n            <h5 class=\\\"text-uppercase font-weight-bold mt-4\\\">Transactions </h5>\\r\\n              <div id=\\\"deploy-wizard\\\" class=\\\"mt-3\\\"  *ngFor =\\\"let transaction of getBlockinfoDetails.transactions; let i=index\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                  <div (click)=\\\"getTransactionDetails(transaction)\\\" class=\\\"card-header collapsed\\\" id=\\\"header-abi\\\" data-toggle=\\\"collapse\\\" attr.data-target=\\\"#{{transaction}}\\\" aria-expanded=\\\"false\\\" aria-controls=\\\"body-abi\\\">\\r\\n                      <i class=\\\"icon-embed2\\\"></i> {{ transaction }}\\r\\n                  </div>\\r\\n                  <div id=\\\"{{transaction}}\\\" class=\\\"collapse\\\" aria-labelledby=\\\"header-abi\\\" data-parent=\\\"#deploy-wizard\\\">\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                     <p class=\\\"\\\">  <strong>Input: </strong> {{ transactionInfo.input }}</p>\\r\\n                     <p class=\\\"\\\">  <strong>Gas Price: </strong> {{ transactionInfo.price }}</p>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <!-- ./Block Description -->\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/blockexplorer/blockexplorer.component.html\n// module id = ./src/app/blockexplorer/blockexplorer.component.html\n// module chunks = main","module.exports = \".miner-anchor {\\n  color: #0056b3;\\n  cursor: pointer; }\\n\\n.block-hash {\\n  color: #0056b3; }\\n\\nul.list-unstyled li {\\n  cursor: pointer; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/blockexplorer/blockexplorer.component.scss\n// module id = ./src/app/blockexplorer/blockexplorer.component.scss\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { ManageuserService } from '../account/manageuser/manageuser.service';\n\n\n@Component({\n  selector: 'app-blockexplorer',\n  templateUrl: './blockexplorer.component.html',\n  styleUrls: ['./blockexplorer.component.scss']\n})\nexport class BlockexplorerComponent implements OnInit {\n  \n  showModal: boolean;\n  isTransaction: boolean = false;\n  getBlockinfoDetails:any = {};\n  getBlockNumberLists:any;\n  minerRes:any;\n  mineShow:boolean = false;\n  totalBlocks:any;\n\n  constructor(private manageuserService : ManageuserService ) { }\n\n  //get block number\n  getBlockNumber(){\n    this.showModal = true;\n    try {\n      this.getBlockNumberLists = this.manageuserService.getBlockNumberService();\n      this.getBlockinfo(this.getBlockNumberLists[0].number);\n      this.showModal = false;\n    } catch (e) {\n      this.showModal = true;\n      setTimeout(function() {\n        this.getBlockNumberLists = this.manageuserService.getBlockNumberService();\n        this.getBlockinfo(this.getBlockNumberLists[0].number);\n        this.showModal = false;\n      }.bind(this), 3000);\n    }\n  }\n\n  //get Block info\n  transaction: any = [];\n  transactionInfo: any = [];;\n  getBlockinfo(blocknumber){\n    this.totalBlocks = this.manageuserService.getTotalBlocks();\n    this.transactionInfo = [];\n    this.getBlockinfoDetails = this.manageuserService.getBlockInfoService(blocknumber);\n    console.log(\"totalBlock\", this.totalBlocks);\n    console.log(\"blocknumber\", blocknumber);\n    if (this.getBlockinfoDetails.number !== undefined){\n      this.getBlockinfoDetails.conf = this.totalBlocks - blocknumber + \" Confirmations\";\n    }\n    console.log(\"getBlockinfoDetails \", this.getBlockinfoDetails);\n    // for (let i = 0; i < this.getBlockinfoDetails.transactions.length; i++) {\n    //   this.transaction = this.manageuserService.getTransactionInfo(this.getBlockinfoDetails.transactions[i]);\n    //   this.transaction.price = this.manageuserService.getGasPrice(this.transaction.value);\n    //   this.transactionInfo.push(this.transaction);\n    // }\n    // console.log(\"Transaction Info\", this.transactionInfo);\n  }\n\n  //minier\n  miner(miner){\n      this.minerRes = this.manageuserService.mineService(miner);\n      console.log('component',this.minerRes);    \n      this.mineShow =  true;\n  }\n\n  getTransactionDetails(transactionHash) {\n    this.transactionInfo = this.manageuserService.getTransactionInfo(transactionHash);\n    this.transactionInfo.price = this.manageuserService.getGasPrice(this.transactionInfo.value);\n    console.log(\"Transaction Info\", this.transactionInfo);\n  }\n\n  getBlockInfoWithTransaction(transctionReq) {\n\n    if(transctionReq == false) {\n      this.isTransaction = true;\n    } else {\n      this.isTransaction = false;\n    }\n  }\n\n  ngOnInit() {\n    this.getBlockNumber();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/blockexplorer/blockexplorer.component.ts","module.exports = \"\\r\\n\\r\\n <router-outlet></router-outlet>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/deploy/deploy.component.html\n// module id = ./src/app/deploy/deploy.component.html\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/deploy/deploy.component.scss\n// module id = ./src/app/deploy/deploy.component.scss\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-deploy',\n  templateUrl: './deploy.component.html',\n  styleUrls: ['./deploy.component.scss']\n})\nexport class DeployComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/deploy/deploy.component.ts","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { DeployComponent } from './deploy.component';\nimport { DeploycontractComponent } from './deploycontract/deploycontract.component';\nimport {FormsModule} from '@angular/forms';\nimport { deployRoute } from './deploy.routes';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(deployRoute),\n    FormsModule\n  ],\n  declarations: [DeployComponent, DeploycontractComponent]\n})\nexport class DeployModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/deploy/deploy.module.ts","import {Routes} from '@angular/router';\r\nimport { DeployComponent } from './deploy.component';\r\nimport { DeploycontractComponent } from './deploycontract/deploycontract.component';\r\n\r\nexport const deployRoute : Routes = [\r\n     {\r\n        path: 'deploy',\r\n        component:DeployComponent,\r\n        children: [\r\n            {\r\n                path: '',\r\n                redirectTo: 'deploycontract',\r\n                pathMatch: 'full'\r\n          },  \r\n          {\r\n            path: 'deploycontract',\r\n            component: DeploycontractComponent\r\n          }\r\n        ]  \r\n    }  \r\n]\n\n\n// WEBPACK FOOTER //\n// ./src/app/deploy/deploy.routes.ts","module.exports = \"<div *ngIf=\\\"compileShow\\\" class=\\\"alert alert-success alert-dismissible fade show\\\" role=\\\"alert\\\">\\r\\n  <strong>Compiled</strong> successfully.\\r\\n  <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"Close\\\">\\r\\n  <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n</button>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"deployShow\\\" class=\\\"alert alert-success alert-dismissible fade show\\\" role=\\\"alert\\\">\\r\\n    <strong>Deployed</strong> successfully.\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"Close\\\">\\r\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n  </button>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"compileFail\\\" class=\\\"alert alert-danger alert-dismissible fade show\\\" role=\\\"alert\\\">\\r\\n  <strong>Compile : </strong> {{ error }}\\r\\n  <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"Close\\\">\\r\\n  <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n</button>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"deployFail\\\" class=\\\"alert alert-danger alert-dismissible fade show\\\" role=\\\"alert\\\">\\r\\n    <strong>Deploy : </strong> {{ error }}\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"Close\\\">\\r\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n  </button>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"modal-backdrop fade in\\\" [style.display]=\\\"showModal ? 'block' : 'none'\\\"></div>\\r\\n  <div class=\\\"modal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" style=\\\"display: block\\\" [style.display]=\\\"showModal ? 'block' : 'none'\\\">\\r\\n    <div class=\\\"modal-dialog\\\">\\r\\n      <div class=\\\"modal-popup\\\">\\r\\n        <div class=\\\"popup-title\\\">\\r\\n          <img src=\\\"assets/img/loader.gif\\\" alt=\\\"\\\" class=\\\"mx-auto d-block\\\">\\r\\n        </div>\\r\\n      </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<div class=\\\"container\\\">\\r\\n  <div id=\\\"deploy-wizard\\\" class=\\\"mt-3\\\">\\r\\n\\r\\n    <!-- Upload file -->\\r\\n    <div class=\\\"card mb-2\\\">\\r\\n      <div class=\\\"card-header\\\" id=\\\"header-upload\\\" data-target=\\\"#body-upload\\\" data-toggle=\\\"collapse\\\" aria-expanded=\\\"true\\\" aria-controls=\\\"body-upload\\\">\\r\\n        <h6 class=\\\"mb-0 py-2\\\">\\r\\n          <i class=\\\"icon-folder-upload\\\"></i> Upload your Solidity file here</h6>\\r\\n      </div>\\r\\n      <div id=\\\"body-upload\\\" class=\\\"collapse show\\\" aria-labelledby=\\\"header-upload\\\" data-parent=\\\"#deploy-wizard\\\">\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <div class=\\\"w-50\\\">\\r\\n            <div class=\\\"input-group\\\">\\r\\n              <div class=\\\"custom-file\\\">\\r\\n                <input type=\\\"file\\\" class=\\\"custom-file-input\\\" id=\\\"file-upload\\\" (change)=\\\"getContractsFromFile($event)\\\">\\r\\n                <label class=\\\"custom-file-label\\\" for=\\\"file-upload\\\">Upload .sol file</label>\\r\\n              </div>\\r\\n              <div class=\\\"input-group-append\\\">\\r\\n                <span class=\\\"input-group-text\\\" id=\\\"\\\">Upload</span>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <!-- ./Upload file -->\\r\\n\\r\\n    <!-- Copy paste code -->\\r\\n    <div class=\\\"card mb-2\\\">\\r\\n      <div class=\\\"card-header\\\"  id=\\\"header-copy\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#body-copy\\\" aria-expanded=\\\"false\\\" aria-controls=\\\"body-copy\\\">\\r\\n        <h6 class=\\\"mb-0 py-2\\\">\\r\\n          <i class=\\\"icon-copy\\\"></i> Copy Paste your Smart Contract</h6>\\r\\n      </div>\\r\\n      <div id=\\\"body-copy\\\" class=\\\"collapse show\\\" aria-labelledby=\\\"header-copy\\\" data-parent=\\\"#deploy-wizard\\\">\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <textarea #contractText contenteditable=\\\"false\\\" [(ngModel)]=\\\"sol.file\\\"  id=\\\"field-copy\\\"   contenteditable=\\\"false\\\" class=\\\"form-control form-control-lg\\\">\\r\\n          </textarea>\\r\\n        </div>\\r\\n        <div class=\\\"card-footer text-right\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-success\\\"\\r\\n          data-toggle=\\\"modal\\\" data-target=\\\"#loader\\\" (click)=\\\"getContractsFromText(contractText)\\\" data-message=\\\"Compiling Contract\\\">Compile</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n      <!-- Deploy contract -->\\r\\n    <div class=\\\"card mb-2\\\">\\r\\n      <div class=\\\"card-header collapsed\\\" id=\\\"header-deploy\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#body-deploy\\\" aria-expanded=\\\"false\\\" aria-controls=\\\"body-deploy\\\">\\r\\n        <h6 class=\\\"mb-0 py-2\\\">\\r\\n          <i class=\\\"icon-rocket\\\"></i> Deploy Contract</h6>\\r\\n      </div>\\r\\n      <div id=\\\"body-deploy\\\" class=\\\"collapse\\\" aria-labelledby=\\\"header-deploy\\\" data-parent=\\\"#deploy-wizard\\\">\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n                <label class=\\\"control-label\\\">Contracts</label>\\r\\n\\r\\n              <select name=\\\"profile\\\" class=\\\"custom-select\\\" required [(ngModel)]=\\\"deploy.deployFrom\\\">\\r\\n                  <option *ngFor=\\\"let contractsList of contractsList\\\" [ngValue]=\\\"contractsList.key\\\">\\r\\n                      {{ contractsList.key }}\\r\\n                  </option>\\r\\n              </select>\\r\\n             </div>\\r\\n            <div class=\\\"col\\\">\\r\\n              <label class=\\\"control-label\\\">Deploy As</label>\\r\\n              <select name=\\\"profile\\\" required class=\\\"form-control\\\" [(ngModel)]=\\\"deploy.deployTo\\\">\\r\\n                    <option *ngFor=\\\"let account of accounts\\\" [ngValue]=\\\"account.accountId\\\">\\r\\n                        {{ account.accountname }} [ {{ account.amount  }} ]\\r\\n                    </option>\\r\\n                 </select>\\r\\n            </div>\\r\\n        </div>\\r\\n        </div>\\r\\n        <div class=\\\"card-footer text-right\\\">\\r\\n          <button type=\\\"button\\\" (click)=\\\"deployContract()\\\" class=\\\"btn btn-success\\\"\\r\\n          >Deploy</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <!-- ./Deploy contract -->\\r\\n\\r\\n    <div class=\\\"card mb-2\\\">\\r\\n      <div class=\\\"card-header collapsed\\\" id=\\\"header-abi\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#body-abi\\\" aria-expanded=\\\"false\\\" aria-controls=\\\"body-abi\\\">\\r\\n        <h6 class=\\\"mb-0 py-2\\\">\\r\\n          <i class=\\\"icon-embed2\\\"></i> Result ( <strong>A</strong>pplication <strong>B</strong>inary <strong>I</strong>nterface )</h6>\\r\\n      </div>\\r\\n      <div id=\\\"body-abi\\\" class=\\\"collapse\\\" aria-labelledby=\\\"header-abi\\\" data-parent=\\\"#deploy-wizard\\\">\\r\\n        <div class=\\\"card-body\\\">\\r\\n         <p class=\\\"\\\">\\r\\n           <span style=\\\"font-weight: 600\\\">\\r\\n              Contract ID:\\r\\n           </span>{{address}}\\r\\n        </p>\\r\\n          <div>\\r\\n            <textarea id=\\\"field-copy\\\" class=\\\"form-control form-control-lg\\\">{{deployresults[0]?.abi | json}}</textarea>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <!-- ./#deploy-wizard -->\\r\\n</div>\\r\\n<!-- ./.container -->\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/deploy/deploycontract/deploycontract.component.html\n// module id = ./src/app/deploy/deploycontract/deploycontract.component.html\n// module chunks = main","module.exports = \".deploy-loader {\\n  -ms-flex-pack: distribute;\\n      justify-content: space-around;\\n  -webkit-box-align: center;\\n      -ms-flex-align: center;\\n          align-items: center;\\n  top: 150px; }\\n\\n.deploy-loader .modal-content {\\n  width: 150px;\\n  height: 80px; }\\n\\n.deploy-loader .modal-body img {\\n  width: 50px; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/deploy/deploycontract/deploycontract.component.scss\n// module id = ./src/app/deploy/deploycontract/deploycontract.component.scss\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { ManageuserService } from '../../account/manageuser/manageuser.service';\r\nimport { ObjectIteratePipe } from '../../pipes/object-iterate.pipe';\r\n@Component({\r\n  selector: 'app-deploycontract',\r\n  templateUrl: './deploycontract.component.html',\r\n  styleUrls: ['./deploycontract.component.scss'],\r\n\r\n})\r\nexport class DeploycontractComponent implements OnInit {\r\n  deployFail: boolean;\r\n  error: any;\r\n  compileFail: boolean;\r\n  parseError: boolean;\r\n  defaultAccount: any = [];\r\n  defaultAccounts: any[];\r\n\r\n  constructor(private manageuserService: ManageuserService) { }\r\n\r\n  compileResults: any;\r\n  deploy: any = {};\r\n  compileShow = false;\r\n  deployShow = false;\r\n  deployresults: any = {}\r\n  accounts: any;\r\n  showModal = false;\r\n  //Ugly hack to get going\r\n  sol: any = {\"file\":\"pragma solidity 0.4.21;\\r\\n\\r\\n\\r\\ncontract Applicant {\\r\\n\\r\\n    struct  ApplicantAddress {\\r\\n        string  street1;\\r\\n        string  street2;\\r\\n        string  city;\\r\\n        string  zip;\\r\\n        string  state;\\r\\n        string  country;\\r\\n    }\\r\\n\\r\\n    struct Application {\\r\\n        string lenderName;\\r\\n        address lenderAddress;\\r\\n        bool active;\\r\\n        uint appliedDate;\\r\\n    }\\r\\n\\r\\n    string private applicantName;\\r\\n    string private applicantSex;\\r\\n    string  private applicantDOB;\\r\\n    ApplicantAddress private homeAdd;\\r\\n    int private ssn;\\r\\n    int private applicantIncome;\\r\\n    address private signedBy;\\r\\n    mapping (address => Application) public applicationDetails;\\r\\n    event ApplicationAcknowledged(address from);\\r\\n    event PersonalInfoRead(address from);\\r\\n    address[] public myApplications;\\r\\n\\r\\n    modifier lenderCallOnly() {\\r\\n        if (!applicationDetails[msg.sender].active) {\\r\\n            revert();\\r\\n        } else {\\r\\n            _;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function Applicant(string _applicantName,\\r\\n                        string _applicantSex,\\r\\n                        string _applicantDOB,\\r\\n                        string _street1,\\r\\n                        string _street2,\\r\\n                        string _city,\\r\\n                        string _zip,\\r\\n                        string _state,\\r\\n                        string _country,\\r\\n                        int _ssn,\\r\\n                        int _applicantIncome) public {\\r\\n\\r\\n        applicantName = _applicantName;\\r\\n        applicantSex = _applicantSex;\\r\\n        applicantDOB = _applicantDOB;\\r\\n        homeAdd = ApplicantAddress(_street1, _street2, _city, _zip, _state, _country);\\r\\n        ssn = _ssn;\\r\\n        applicantIncome = _applicantIncome;\\r\\n        signedBy = msg.sender;\\r\\n    }\\r\\n\\r\\n    function findBySSN(int _ssn) public view returns (bool) {\\r\\n        if (ssn == _ssn) {\\r\\n            return true;\\r\\n        }\\r\\n        return false;\\r\\n    }\\r\\n\\r\\n    function ackApplication(string _name, address _lenderAddress) public {\\r\\n\\r\\n        applicationDetails[msg.sender] = Application(_name, _lenderAddress, true, now);\\r\\n        ApplicationAcknowledged(msg.sender);\\r\\n        myApplications.push(msg.sender);\\r\\n    }\\r\\n\\r\\n       \\/\\/add modified lenderCallOnly to restrict access ONLY to lender\\r\\n    function getApplicantDetails() public view  returns(string, string, string, int, int, address) {\\r\\n        return (applicantName, applicantSex, applicantDOB, ssn, applicantIncome, signedBy);\\r\\n    }\\r\\n\\r\\n       \\/\\/add modified lenderCallOnly to restrict access ONLY to lender\\r\\n    function getApplicantAddress() public  view  returns(string, string, string, string, string, string) {\\r\\n        return(homeAdd.street1, homeAdd.street2, homeAdd.city, homeAdd.zip, homeAdd.state, homeAdd.country);\\r\\n    }\\r\\n}\\r\\n\\r\\n\\r\\ncontract LoanProgram {\\r\\n\\r\\n    event ApplicationCreated(address contractAddress);\\r\\n    string public name;\\r\\n\\r\\n    function LoanProgram(string _name) public {\\r\\n\\r\\n        name = \\\"Add-On Demo Loan Program\\\";\\r\\n    }\\r\\n\\r\\n    function apply(address _applicant, string _loanType, int _loanAmount, int _loanPeriodInYears) public {\\r\\n\\r\\n        address newContract = new Loan(name, _applicant, _loanType, _loanAmount, _loanPeriodInYears);\\r\\n        ApplicationCreated(newContract);\\r\\n    }\\r\\n}\\r\\n\\r\\n\\r\\ncontract Loan {\\r\\n\\r\\n    address public applicantContractAddress;\\r\\n    string public loanType;\\r\\n    int public loanAmount;\\r\\n    address public loanProgramAddress = msg.sender;\\r\\n    bool public received;\\r\\n    bool public goodCredit;\\r\\n    bool public approved;\\r\\n    event UpdatingCreditStatusFor(int ssn);\\r\\n    event DisclosuresUpdated(int estimatedIntrestRate, int estimatedEMI);\\r\\n    event LoanAmountTxfed(uint amount);\\r\\n    int private ssn;\\r\\n    int private applicantIncome;\\r\\n    address private signedBy;\\r\\n    int public estimatedIntrestRate;\\r\\n    int public estimatedEMI;\\r\\n    int public loanPeriodInYears;\\r\\n\\r\\n    function Loan(string _name, address _applicantContract, string _type, int _amount, int _periodInYears) public {\\r\\n        Applicant applicant =  Applicant(_applicantContract);\\r\\n        applicant.ackApplication(_name, loanProgramAddress);\\r\\n        (, , , ssn, applicantIncome, signedBy) = applicant.getApplicantDetails();\\r\\n        applicantContractAddress = _applicantContract;\\r\\n        loanType = _type;\\r\\n        loanAmount = _amount;\\r\\n        received = true;\\r\\n        loanPeriodInYears = _periodInYears;\\r\\n    }\\r\\n\\r\\n    function updateCreditStatus(bool _creditStatus) public {\\r\\n        UpdatingCreditStatusFor(ssn);\\r\\n        goodCredit = _creditStatus;\\r\\n    }\\r\\n\\r\\n    function addDisclosure(int _estimatedIntrestRate, int _estimatedEMI) public {\\r\\n        estimatedIntrestRate = _estimatedIntrestRate;\\r\\n        estimatedEMI = _estimatedEMI;\\r\\n        DisclosuresUpdated(_estimatedIntrestRate, _estimatedEMI);\\r\\n\\r\\n    }\\r\\n\\r\\n    function approveLoan() public payable {\\r\\n        if (goodCredit) {\\r\\n            signedBy.transfer(msg.value);\\r\\n            approved = true;\\r\\n            LoanAmountTxfed(msg.value);\\r\\n        } else {\\r\\n            revert();\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\"};\r\n  address: any;\r\n  contractsList: any = [];\r\n  display: any;\r\n  files: FileList;\r\n  file: any;\r\n  showSMTextarea = 0;\r\n\r\n\r\n  //get account details\r\n  // getAccountInfo() {\r\n  //   this.accounts = this.manageuserService.getAccountInfo();\r\n  // }\r\n  getAccountInfo() {\r\n\r\n    this.manageuserService.getAccountDetails().subscribe((rest: Response) => {\r\n      try {\r\n        this.accounts = JSON.parse(rest[0][1]);\r\n        this.parseError = false;\r\n      } catch (ex) {\r\n        this.parseError = true;\r\n      }\r\n    });\r\n  }\r\n  //compile contract\r\n\r\n  getContractsFromText() {\r\n    this.contractsList = [];\r\n    let file = this.sol.file;\r\n    this.showModal = true;\r\n    this.compileContract(file);\r\n  }\r\n\r\n  getContractsFromFile(e) {\r\n    this.file = e.target.files[0];\r\n    let fileReader = new FileReader();\r\n    this.contractsList = [];\r\n    this.showModal = true;\r\n    this.showSMTextarea = 0;\r\n    fileReader.onload = (e) => {\r\n      this.sol.file = fileReader.result;\r\n      this.showModal = false;\r\n      //this.compileContract(this.sol.file);\r\n      this.showSMTextarea = 1;\r\n\r\n    }\r\n    fileReader.readAsText(this.file);\r\n  }\r\n\r\n\r\n  compileContract(file) {\r\n    this.manageuserService.compileContractService(this.sol.file).subscribe(\r\n      data => {\r\n      this.compileResults = data;\r\n        console.log('compileResults length', this.compileResults.contracts);\r\n\r\n          for (let key in this.compileResults.contracts) {\r\n            let contractKey = {\r\n              \"key\": key\r\n            }\r\n            this.contractsList.push(contractKey);\r\n          }\r\n\r\n          if(this.contractsList.length > 0) {\r\n            this.compileShow = true;\r\n            this.showModal = false;\r\n            this.hideFlashMessage(\"this.compileShow\");\r\n          } else {\r\n            this.compileFail = true;\r\n            this.error = this.compileResults.errors[0];\r\n            this.showModal = false;\r\n            this.hideFlashMessage(\"this.compileFail\");\r\n         }\r\n\r\n      },\r\n      err => {\r\n        console.error(\"test\", err);\r\n        this.compileFail = true;\r\n        this.error = err;\r\n        this.hideFlashMessage(\"this.compileFail\");\r\n      },\r\n      () => console.log('loading compileContractInfo is done')\r\n    );\r\n  }\r\n\r\n  //deploy contract\r\n  deployContract() {\r\n    this.error = \"\";\r\n    this.showModal = true;\r\n    try {\r\n      this.deployresults = this.manageuserService.deployContractService(this.deploy, this.compileResults);\r\n      this.deployFail = false;\r\n      this.showModal = false;\r\n      this.deployShow = true;\r\n      this.hideFlashMessage(\"this.deployShow\");\r\n    } catch (e) {\r\n      this.deployFail = true;\r\n      this.error = e;\r\n      this.showModal = false;\r\n      console.log(\"error\", e);\r\n      this.hideFlashMessage(\"this.deployFail\");\r\n    }\r\n  }\r\n\r\n  listenEvents() {\r\n    this.manageuserService.contractInfoEmitter.subscribe(data => {\r\n        this.address = this.deployresults[0].address;\r\n    });\r\n  }\r\n\r\n  getUserBalance(accountId) {\r\n    return this.manageuserService.getUserBalance(accountId);\r\n  }\r\n\r\n  hideFlashMessage(data) {\r\n    setTimeout(function() {\r\n      if(data == \"this.compileShow\") {\r\n        this.compileShow = false;\r\n      } else if(data == \"this.deployShow\") {\r\n        this.deployShow = false;\r\n      } else if(data == \"this.deployFail\") {\r\n        this.deployFail = false;\r\n      } else if(data == \"this.compileFail\") {\r\n        this.compileFail = false;\r\n      }\r\n    }.bind(this), 6000);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getAccountInfo();\r\n    // tslint:disable-next-line:no-unused-expression\r\n    this.sol;\r\n    this.listenEvents();\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/deploy/deploycontract/deploycontract.component.ts","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'filter'\n})\nexport class FilterPipe implements PipeTransform {\n  transform(items: any[], args: string): any {\n    if (!args){\n      return items;\n    } else {\n      return items\n        .filter(item =>   \n           item.number\n        );\n    }\n  }   \n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/filter.pipe.ts","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'ObjectIterate'\n})\nexport class ObjectIteratePipe implements PipeTransform {\n\n  transform(value: any, args: any[] = null): any {\n    return Object.keys(value)//.map(key => value[key]);\n  } \n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/pipes/object-iterate.pipe.ts","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"mt-3\\\">\\n    <img src=\\\"assets/img/Schedule.png\\\" alt=\\\"\\\" class=\\\"d-block mx-auto\\\">\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/scheduling/scheduling.component.html\n// module id = ./src/app/scheduling/scheduling.component.html\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/scheduling/scheduling.component.scss\n// module id = ./src/app/scheduling/scheduling.component.scss\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-scheduling',\n  templateUrl: './scheduling.component.html',\n  styleUrls: ['./scheduling.component.scss']\n})\nexport class SchedulingComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/scheduling/scheduling.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}